{"remainingRequest":"D:\\Learning_platform-master\\platform\\node_modules\\babel-loader\\lib\\index.js!D:\\Learning_platform-master\\platform\\src\\libs\\mixin.js","dependencies":[{"path":"D:\\Learning_platform-master\\platform\\src\\libs\\mixin.js","mtime":1750644511209},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiRDovTGVhcm5pbmdfcGxhdGZvcm0tbWFzdGVyL3BsYXRmb3JtL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9vYmplY3RTcHJlYWQyIjsKdmFyIG15TWV0aG9kcyA9IHsKICB0b2FzdDogZnVuY3Rpb24gdG9hc3QobXNnLCB0eXBlKSB7CiAgICB2YXIgc3RyVHlwZSA9ICJzdWNjZXNzIjsKCiAgICBzd2l0Y2ggKHR5cGUpIHsKICAgICAgY2FzZSAxOgogICAgICAgIHN0clR5cGUgPSAic3VjY2VzcyI7CiAgICAgICAgYnJlYWs7CgogICAgICBjYXNlIDI6CiAgICAgICAgc3RyVHlwZSA9ICJlcnJvciI7CiAgICAgICAgYnJlYWs7CgogICAgICBkZWZhdWx0OgogICAgICAgIHN0clR5cGUgPSAic3VjY2VzcyI7CiAgICB9CgogICAgdGhpcy4kbWVzc2FnZSh7CiAgICAgIG1lc3NhZ2U6IG1zZywKICAgICAgdHlwZTogc3RyVHlwZQogICAgfSk7CiAgfSwKICBub3RpZnk6IGZ1bmN0aW9uIG5vdGlmeShtc2csIHR5cGUpIHsKICAgIHZhciBzdHJUeXBlID0gInN1Y2Nlc3MiOwoKICAgIHN3aXRjaCAodHlwZSkgewogICAgICBjYXNlIDE6CiAgICAgICAgc3RyVHlwZSA9ICJzdWNjZXNzIjsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgMjoKICAgICAgICBzdHJUeXBlID0gImVycm9yIjsKICAgICAgICBicmVhazsKCiAgICAgIGNhc2UgMzoKICAgICAgICBzdHJUeXBlID0gIndhcm5pbmciOwogICAgICAgIGJyZWFrOwoKICAgICAgY2FzZSA0OgogICAgICAgIHN0clR5cGUgPSAiaW5mbyI7CiAgICAgICAgYnJlYWs7CgogICAgICBkZWZhdWx0OgogICAgICAgIHN0clR5cGUgPSAiaW5mbyI7CiAgICB9CgogICAgdGhpcy4kbm90aWZ5KHsKICAgICAgbWVzc2FnZTogbXNnLAogICAgICB0eXBlOiBzdHJUeXBlCiAgICB9KTsKICB9LAogIG5hdmlnYXRvcjogZnVuY3Rpb24gbmF2aWdhdG9yKHVybCkgewogICAgdGhpcy4kcm91dGVyLnB1c2godXJsKTsKICB9LAogIGNsb25lOiBmdW5jdGlvbiBjbG9uZShvYmopIHsKICAgIHJldHVybiBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KG9iaikpOwogIH0KfTsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtaXg6ICdtaXgnCiAgICB9OwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgbXlNZXRob2RzKQp9Ow=="},{"version":3,"sources":["D:/Learning_platform-master/platform/src/libs/mixin.js"],"names":["myMethods","toast","msg","type","strType","$message","message","notify","$notify","navigator","url","$router","push","clone","obj","JSON","parse","stringify","data","mix","methods"],"mappings":";AAAA,IAAMA,SAAS,GAAG;AACdC,EAAAA,KADc,iBACRC,GADQ,EACJC,IADI,EACC;AACX,QAAIC,OAAO,GAAG,SAAd;;AACA,YAAOD,IAAP;AACI,WAAK,CAAL;AACIC,QAAAA,OAAO,GAAG,SAAV;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,OAAO,GAAG,OAAV;AACA;;AACJ;AACIA,QAAAA,OAAO,GAAG,SAAV;AARR;;AAUA,SAAKC,QAAL,CAAc;AACVC,MAAAA,OAAO,EAAEJ,GADC;AAEVC,MAAAA,IAAI,EAAEC;AAFI,KAAd;AAIH,GAjBa;AAkBdG,EAAAA,MAlBc,kBAkBPL,GAlBO,EAkBHC,IAlBG,EAkBE;AACZ,QAAIC,OAAO,GAAG,SAAd;;AACA,YAAOD,IAAP;AACI,WAAK,CAAL;AACIC,QAAAA,OAAO,GAAG,SAAV;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,OAAO,GAAG,OAAV;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,OAAO,GAAG,SAAV;AACA;;AACJ,WAAK,CAAL;AACIA,QAAAA,OAAO,GAAG,MAAV;AACA;;AACJ;AACIA,QAAAA,OAAO,GAAG,MAAV;AAdR;;AAgBA,SAAKI,OAAL,CAAa;AACTF,MAAAA,OAAO,EAAEJ,GADA;AAETC,MAAAA,IAAI,EAAEC;AAFG,KAAb;AAIH,GAxCa;AAyCdK,EAAAA,SAzCc,qBAyCJC,GAzCI,EAyCA;AACV,SAAKC,OAAL,CAAaC,IAAb,CAAkBF,GAAlB;AACH,GA3Ca;AA4CdG,EAAAA,KA5Cc,iBA4CRC,GA5CQ,EA4CH;AACP,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,GAAf,CAAX,CAAP;AACH;AA9Ca,CAAlB;AAiDA,eAAe;AACXI,EAAAA,IADW,kBACL;AAEF,WAAO;AACJC,MAAAA,GAAG,EAAE;AADD,KAAP;AAIH,GAPU;AAQXC,EAAAA,OAAO,oBACApB,SADA;AARI,CAAf","sourcesContent":["const myMethods = {\n    toast(msg,type){\n        let strType = \"success\"\n        switch(type){\n            case 1:\n                strType = \"success\"\n                break\n            case 2:\n                strType = \"error\"\n                break  \n            default:\n                strType = \"success\"    \n        } \n        this.$message({\n            message: msg,\n            type: strType\n        })\n    },\n    notify(msg,type){\n        let strType = \"success\"\n        switch(type){\n            case 1:\n                strType = \"success\"\n                break\n            case 2:\n                strType = \"error\"\n                break  \n            case 3:\n                strType = \"warning\"\n                break\n            case 4:\n                strType = \"info\"\n                break \n            default:\n                strType = \"info\"    \n        } \n        this.$notify({\n            message: msg,\n            type: strType\n        })\n    },\n    navigator(url){\n        this.$router.push(url)\n    },\n    clone(obj) {\n        return JSON.parse(JSON.stringify(obj))\n    },\n}\n\nexport default {\n    data(){\n\n        return {\n           mix: 'mix',\n         \n        }\n    },\n    methods: {\n        ...myMethods\n    },\n}"]}]}