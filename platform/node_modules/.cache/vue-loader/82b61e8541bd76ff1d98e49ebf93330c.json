{"remainingRequest":"D:\\Learning_platform-master\\platform\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Learning_platform-master\\platform\\src\\views\\register.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"D:\\Learning_platform-master\\platform\\src\\views\\register.vue","mtime":1750727594666},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Learning_platform-master\\platform\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRpbCB7CiAgY29sb3I6ICMyZDczY2M7CiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsKICBmb250LXNpemU6IDYwcHg7Cn0KCi5iYWNrMmxvZ2luIHsKICBjdXJzb3I6IHBvaW50ZXI7CiAgY29sb3I6ICMyOThhZGI7CiAgZmxvYXQ6IHJpZ2h0OwogIHBhZGRpbmctYm90dG9tOiAzMHB4OwogIGZvbnQtc2l6ZTogMThweDsKfQoKLmJveC1jYXJkIHsKICBtYXJnaW46IDAgYXV0bzsKICB3aWR0aDogNDgwcHg7Cn0KCi5teUxvZ2luVUkgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICB0b3A6IDUwJTsKICBsZWZ0OiA1MCU7CiAgbWFyZ2luOiAtMjgwcHggMCAwIC0yNDBweDsKICB3aWR0aDogNDgwcHg7Cn0K"},{"version":3,"sources":["register.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkQA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"register.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <!-- 顶部标题 -->\n    <div\n        style=\"background-color: #f7f7f7; display: flex; justify-content: center; align-items: center; height: 90px;\"\n    >\n      <span class=\"til\">大连理工大学在线教育平台</span>\n    </div>\n\n    <!-- 背景图绑定 -->\n    <div :style=\"backgroundStyle\"></div>\n\n    <div class=\"myLoginUI\">\n      <el-card class=\"box-card\">\n        <h1 class=\"h1\">注册</h1>\n        <el-form\n            ref=\"registerForm\"\n            :model=\"registerForm\"\n            :rules=\"registerRules\"\n            class=\"register-form\"\n            autocomplete=\"on\"\n            label-position=\"left\"\n        >\n          <el-form-item class=\"register-form-item\" prop=\"username\">\n            <el-input\n                ref=\"username\"\n                v-model=\"registerForm.username\"\n                placeholder=\"请输入用户名\"\n                name=\"username\"\n                type=\"text\"\n                tabindex=\"1\"\n                autocomplete=\"on\"\n                prefix-icon=\"el-icon-user\"\n            />\n          </el-form-item>\n\n          <el-form-item class=\"register-form-item\" prop=\"password\">\n            <el-input\n                :key=\"passwordType\"\n                ref=\"password\"\n                v-model=\"registerForm.password\"\n                placeholder=\"请输入密码\"\n                name=\"password\"\n                :type=\"passwordType\"\n                tabindex=\"2\"\n                autocomplete=\"on\"\n                prefix-icon=\"el-icon-lock\"\n            />\n          </el-form-item>\n\n          <el-form-item class=\"register-form-item\" prop=\"passwordAgain\">\n            <el-input\n                :key=\"passwordType\"\n                ref=\"passwordAgain\"\n                v-model=\"registerForm.passwordAgain\"\n                placeholder=\"请确认密码\"\n                name=\"passwordAgain\"\n                :type=\"passwordType\"\n                tabindex=\"3\"\n                autocomplete=\"on\"\n                prefix-icon=\"el-icon-lock\"\n            />\n          </el-form-item>\n\n          <el-form-item prop=\"email\">\n            <el-input\n                ref=\"email\"\n                v-model=\"registerForm.email\"\n                placeholder=\"请输入邮箱\"\n                name=\"email\"\n                type=\"text\"\n                tabindex=\"4\"\n                autocomplete=\"on\"\n                prefix-icon=\"el-icon-message\"\n            />\n          </el-form-item>\n\n          <el-form-item prop=\"emailCode\">\n            <el-input\n                ref=\"emailCode\"\n                v-model=\"registerForm.emailCode\"\n                placeholder=\"请输入邮箱验证码\"\n                name=\"emailCode\"\n                type=\"text\"\n                tabindex=\"5\"\n                autocomplete=\"on\"\n                prefix-icon=\"el-icon-chat-dot-square\"\n                style=\"width: 67%; float: left;\"\n            />\n            <el-button\n                type=\"primary\"\n                plain\n                style=\"float: right\"\n                :disabled=\"disabled\"\n                @click=\"getEmailCode()\"\n            >{{btntxt}}</el-button>\n          </el-form-item>\n\n          <el-button\n              :loading=\"loading\"\n              type=\"primary\"\n              style=\"width:100%;margin-bottom:20px;\"\n              @click.native.prevent=\"handleRegister\"\n          >注册</el-button>\n        </el-form>\n\n        <span class=\"back2login\" @click=\"back2login\">返回登录</span>\n\n        <Vcode :show=\"isShow\" @success=\"success\" @close=\"close\" />\n      </el-card>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vcode from \"vue-puzzle-vcode\";\nimport { sendEmailCode, register } from \"@/api/modules/user\";\n\nexport default {\n  name: \"register\",\n  data() {\n    const checkLength = (rule, value, callback) => {\n      if (!value) return callback(new Error(\"用户名不能为空\"));\n      value.length >= 5 ? callback() : callback(new Error(\"长度不能小于5\"));\n    };\n\n    const checkPassword = (rule, value, callback) => {\n      if (!value) return callback(new Error(\"密码不能为空\"));\n      value.length >= 5 ? callback() : callback(new Error(\"长度不能小于6位\"));\n    };\n\n    const checkPasswordAgain = (rule, value, callback) => {\n      const password = this.$refs.password.value;\n      if (!value) return callback(new Error(\"确认密码不能为空\"));\n      value !== password\n          ? callback(new Error(\"两次输入密码不一致\"))\n          : callback();\n    };\n\n    const userEmail = (rule, value, callback) => {\n      const mailReg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+(.[a-zA-Z0-9_-])+/;\n      if (!value) return callback(new Error(\"邮箱不能为空\"));\n      setTimeout(() => {\n        mailReg.test(value)\n            ? callback()\n            : callback(new Error(\"请输入正确的邮箱格式\"));\n      }, 100);\n    };\n\n    return {\n      registerForm: {\n        username: \"\",\n        password: \"\",\n        passwordAgain: \"\",\n        email: \"\",\n        emailCode: \"\",\n        etc: {}\n      },\n      registerRules: {\n        username: { validator: checkLength, trigger: \"blur\" },\n        password: { validator: checkPassword, trigger: \"blur\" },\n        passwordAgain: { validator: checkPasswordAgain, trigger: \"blur\" },\n        email: { validator: userEmail, trigger: \"blur\" },\n        emailCode: {\n          required: true,\n          message: \"验证码不能为空\",\n          trigger: \"blur\"\n        }\n      },\n      isShow: false,\n      loading: false,\n      passwordType: \"password\",\n      redirect: undefined,\n      time: 0,\n      btntxt: \"获取验证码\",\n      disabled: false,\n      type: \"0\",\n      // 背景图绑定方式\n      backgroundStyle: {\n        backgroundImage: `url(${require('@/assets/background.png')})`,\n        width: \"100%\",\n        position: \"fixed\",\n        height: \"100%\",\n        top: \"90px\",\n        left: \"0px\",\n        backgroundSize: \"cover\",\n        backgroundRepeat: \"no-repeat\"\n      }\n    };\n  },\n  components: {\n    Vcode\n  },\n  methods: {\n    handleRegister() {\n      this.$refs.registerForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          this.isShow = true;\n        }\n      });\n    },\n    success() {\n      this.isShow = false;\n      this.loading = false;\n      this.registerForm.etc = JSON.stringify({\n        emailCode: this.registerForm.emailCode\n      });\n\n      register(this.registerForm)\n          .then(resp => {\n            this.toast(resp.data.message, 1);\n            this.navigator(\"/login\");\n          })\n          .catch(data => {\n            this.toast(data, 2);\n          });\n    },\n    close() {\n      this.isShow = false;\n      this.loading = false;\n    },\n    getEmailCode() {\n      this.$refs.registerForm.validateField(\"email\", err => {\n        if (!err) {\n          this.time = 60;\n          this.timer();\n          this.type = 0;\n          sendEmailCode({ email: this.registerForm.email, type: this.type })\n              .then(resp => {\n                this.toast(resp.data.message, 1);\n              })\n              .catch(data => {\n                this.toast(data, 2);\n              });\n        }\n      });\n    },\n    timer() {\n      if (this.time > 0) {\n        this.time--;\n        this.btntxt = this.time + \"s后重新获取\";\n        this.disabled = true;\n        setTimeout(this.timer, 1000);\n      } else {\n        this.time = 0;\n        this.btntxt = \"获取验证码\";\n        this.disabled = false;\n      }\n    },\n    back2login() {\n      this.navigator(\"/login\");\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\">\n.til {\n  color: #2d73cc;\n  font-weight: bolder;\n  font-size: 60px;\n}\n\n.back2login {\n  cursor: pointer;\n  color: #298adb;\n  float: right;\n  padding-bottom: 30px;\n  font-size: 18px;\n}\n\n.box-card {\n  margin: 0 auto;\n  width: 480px;\n}\n\n.myLoginUI {\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  margin: -280px 0 0 -240px;\n  width: 480px;\n}\n</style>\n"]}]}